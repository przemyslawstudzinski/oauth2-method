buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.palantir.docker'


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-security:2.0.1.RELEASE'

	runtime 'org.postgresql:postgresql:42.2.2'

	compile 'org.projectlombok:lombok:1.16.18'

	compile 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
	compile 'org.mapstruct:mapstruct-processor:1.2.0.Final'

	compile 'org.springframework.security.oauth:spring-security-oauth2:2.3.3.RELEASE'


	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

test {
	testLogging {
		events 'started', 'passed'
		exceptionFormat = 'full'
	}
}

checkstyle {
	toolVersion '8.9'
	configFile = file("checkstyle.xml")
	maxWarnings = 0
}

pmd {
	toolVersion = '6.2.0'
	consoleOutput= true
	ignoreFailures = false
	ruleSetFiles = files("ruleset.xml")
	reportsDir = file("build/reports/pmd")
}

docker {
	dependsOn build
	project.file('Dockerfile')
	name "przemyslawstudzinski/${bootJar.baseName}"
	files bootJar.archivePath
	buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}
